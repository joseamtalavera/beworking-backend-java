# PostgreSQL DB config
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# Java Database Connectivity (JDBC) driver class
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.properties.hibernate.default_schema=beworking

# ---
# JWT Secret Management Steps (for reference, remove before production)
# 1. The secret is injected from the environment variable JWT_SECRET (see docker-compose.yml or your deployment env).
# 2. Never hardcode secrets here; always use environment variables for production.
# ---
# JWT configuration
jwt.secret=${JWT_SECRET:test_secret}

# email configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=marketing@be-working.com
spring.mail.password=cgym wipq xcka mqxa
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

spring.application.name=java

spring.devtools.livereload.enabled=true
